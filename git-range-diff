#!/usr/bin/env python3

import sys
import tabulate

from meta import Meta
from span import Span
from compare_ranges import CommitRange, git_range_diff_table

tabulate.PRESERVE_WHITESPACE = True

def print_legend(ranges, html):
    def_col = (
        ('bug-critical', 'Critical bugs'),
        ('matching', 'Matching, checked automatically'),
        ('checked', 'Matching, checked by hand'),
        ('drop', 'Dropped patches'),
        ('bug', 'Jira issues, non-critical')
    )
    br = '<br>' if html else ''
    for col, desc in def_col:
        print(Span(f'███████ - {desc}', klass=col))
    for r in ranges:
        if r.name != r.git_range:
            print('{} = {}{}'.format(r.name, r.git_range, br))


def main(ranges, meta, html, jira, jira_issues, legend, format):
    if meta:
        meta = Meta(meta)

    fmt_full = format == 'full'
    fmt = 'html' if html else 'colored'

    if len(ranges) == 2 and '..' in ranges[1] and \
            '..' not in ranges[0]:
        # No reason to search below ranges[2] base
        ranges[0] = ranges[1].split('..', 1)[0] + '..' + ranges[0]

    ranges = [CommitRange(r, meta) for r in ranges]
    if jira_issues:
        assert jira is not None
        jira_issues = jira_issues.split(',')

    out = git_range_diff_table(ranges, meta, jira, jira_issues, fmt,
                               headers=fmt_full,
                               date_column=fmt_full,
                               author_column=fmt_full)

    if html:
        print("""<!DOCTYPE html>
              <meta charset="utf-8"/>
              <style>
              body {
                 font-family: monospace;
              }
              </style>
              """)

    if legend:
        print_legend(ranges, html)

    if html:
        tablefmt = 'html'
    elif legend:
        tablefmt = 'simple'
    else:
        tablefmt = 'plain'
    print(tabulate.tabulate(out, tablefmt=tablefmt))


if __name__ == '__main__':
    import argparse

    p = argparse.ArgumentParser(description="Compare git commit ranges")

    p.add_argument('ranges', metavar='range', nargs='+',
                   help='ranges to compare, '
                   'in form [<name>:]<git range or ref>')
    p.add_argument('--meta', help='optional, file with additional metadata')
    p.add_argument('--html', help='output in html format', action='store_true')
    p.add_argument('--jira-issues', help='optional, comma-separated jira issues list')
    p.add_argument('--jira', help='user:password@server')
    p.add_argument('--legend', help='print legend', action='store_true')
    p.add_argument('--format', help='what to show in table: "short" is default. '
                   '"full" adds author and date columns and also column headers',
                   default='short')

    args = p.parse_args()

    main(**vars(args))
